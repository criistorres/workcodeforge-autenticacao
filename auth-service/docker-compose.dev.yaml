version: "3.8"

services:
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      CORS_ORIGIN: http://play.workadventure.localhost
      
      # Banco de Dados PostgreSQL
      DATABASE_URL: postgresql://postgres:Zocca171416@##@postgres:5432/workcode
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: workcode
      DB_USER: postgres
      DB_PASSWORD: Zocca171416@##
      
      # Redis
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # JWT
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_EXPIRES_IN: 1h
      REFRESH_TOKEN_EXPIRES_IN: 30d
      
      # OIDC
      OIDC_ISSUER: http://auth.workadventure.localhost
      OIDC_CLIENT_ID: workadventure-client
      OIDC_CLIENT_SECRET: workadventure-secret
      
      # Logs
      LOG_LEVEL: debug
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: node dist/app.js

  postgres:
    image: postgres:15.4
    environment:
      POSTGRES_DB: workcode
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C.UTF-8 --lc-ctype=C.UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d workcode"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Adminer para gerenciar o banco de dados
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: auth-service-network
